{"version":3,"sources":["webpack:///D:/workspace/supplier_wx_mini/uni_modules/uni-file-picker/components/uni-file-picker/uni-file-picker.vue?cd58","webpack:///D:/workspace/supplier_wx_mini/uni_modules/uni-file-picker/components/uni-file-picker/uni-file-picker.vue?75fc","webpack:///D:/workspace/supplier_wx_mini/uni_modules/uni-file-picker/components/uni-file-picker/uni-file-picker.vue?5163","webpack:///D:/workspace/supplier_wx_mini/uni_modules/uni-file-picker/components/uni-file-picker/uni-file-picker.vue?c4ae","uni-app:///uni_modules/uni-file-picker/components/uni-file-picker/uni-file-picker.vue","webpack:///D:/workspace/supplier_wx_mini/uni_modules/uni-file-picker/components/uni-file-picker/uni-file-picker.vue?e909"],"names":["renderjs","component","options","__file","components","render","_vm","this","_h","$createElement","_self","_c","recyclableRender","staticRenderFns","_withStripped"],"mappings":";;;;2DAAA,mSACIA,EADJ,iHASIC,EAAY,qBACd,aACA,YACA,sBACA,EACA,KACA,KACA,MACA,EACA,gBACAD,GAGFC,EAAUC,QAAQC,OAAS,6EACZ,aAAAF,E;;;;2GCvBf,2zB;;;;2GCAA,IAAIG,EAAJ,0LACA,IAAIC,EAAS,WACX,IAAIC,EAAMC,KACNC,EAAKF,EAAIG,eACJH,EAAII,MAAMC,IAEjBC,GAAmB,EACnBC,EAAkB,GACtBR,EAAOS,eAAgB,G;;;;2DCRvB,+eAA2qB,eAAG,G;;;;2MC0C9qB,0C,84BA6CA,CACA,qBACA,YACA,cACA,cAEA,OACA,OACA,oBACA,QAFA,WAGA,WAGA,UACA,aACA,YAEA,gBACA,aACA,YAEA,SACA,aACA,YAGA,YACA,aACA,YAGA,OACA,qBACA,WAGA,MACA,YACA,gBAOA,eACA,YACA,iBAGA,aACA,oBACA,QAFA,WAGA,WAGA,OACA,YACA,YAEA,YACA,YACA,QAFA,WAGA,OAEA,UAEA,aAEA,kBAIA,aACA,YACA,QAFA,WAGA,OACA,aACA,iBAIA,UACA,aACA,YAEA,YACA,YACA,kBAGA,OACA,OACA,QADA,SACA,cACA,KACA,mBACA,uBACA,wDACA,6BACA,SACA,cAEA,eACA,0BAEA,gBAEA,WAEA,EADA,2BACA,sBAEA,mBAEA,yCACA,cAEA,eAGA,KAvHA,WAwHA,OACA,WAGA,UACA,UADA,WAEA,SAIA,OAHA,gCACA,aAEA,GAEA,SARA,WASA,mCACA,UAEA,QAEA,YAdA,WAeA,iCACA,EAEA,WAGA,cACA,EAEA,WALA,GAOA,QA1BA,WA2BA,mCAIA,wBAHA,8CACA,sBAOA,QAhKA,WAkKA,8BACA,gBACA,6CAEA,iBACA,mCACA,2CACA,0BACA,qBACA,+BACA,sCAIA,SAIA,QAJA,WAIA,wEACA,eACA,kBACA,aAEA,GADA,aACA,WACA,kBAEA,UAKA,OAjBA,WA2BA,SACA,kCACA,wCACA,+BAIA,qBAKA,OAvCA,WAyCA,gBACA,+FACA,aACA,+CACA,cAaA,qBAMA,YAhEA,WAgEA,WAEA,EACA,qBACA,wBACA,cAEA,oDACA,yCACA,qJACA,qFACA,YAEA,KACA,KACA,+BACA,iCACA,2BACA,uBACA,2BACA,UACA,mBAGA,+BACA,aACA,iGACA,YACA,iBAIA,kBACA,eAGA,KACA,IA5BA,YA4BA,YA5BA,sBA6BA,iCA7BA,0DA8BA,qBA9BA,UA+BA,oCA/BA,QA+BA,EA/BA,OAgCA,YACA,aACA,iBACA,gBACA,UApCA,QA4BA,IA5BA,uBAsCA,kBACA,YACA,kBAEA,cAEA,2BACA,gBA7CA,qGAuDA,6BACA,4BAGA,kBACA,qCAEA,mBACA,0BAQA,YAhJA,SAgJA,cACA,eACA,uCACA,+BAEA,kBACA,2BAEA,mBACA,yBAOA,mBAhKA,SAgKA,gJACA,KACA,KACA,KACA,KAJA,WAKA,GAEA,WACA,0EACA,kCACA,2BACA,sBACA,0BACA,2BAEA,mBACA,yBAEA,qBACA,qBACA,4BACA,uBACA,mBACA,yBAlBA,IALA,YAKA,YALA,wBAKA,GALA,iEAKA,IALA,uBA2BA,aACA,YAEA,mBACA,0BACA,mBAIA,YACA,gBACA,0BACA,kBAvCA,+CAkDA,YAlNA,SAkNA,OACA,sBAEA,mCACA,IACA,IACA,yEAEA,uBAEA,2BAEA,uBACA,QACA,qBACA,2BAQA,QAzOA,SAyOA,cACA,qBACA,uBACA,iCAEA,uBACA,2BACA,gBAQA,WAxPA,SAwPA,GACA,yBACA,WACA,OACA,sBACA,yBAQA,YArQA,SAqQA,GACA,kCACA,gBACA,MACA,QAFA,SAEA,GACA,MAEA,KALA,SAKA,GACA,YASA,YAtRA,SAsRA,kMAEA,uBACA,sBACA,GACA,YACA,YACA,cACA,sBACA,YACA,oBACA,mBACA,YACA,SACA,YACA,UAEA,YAjBA,iCAkBA,sBAlBA,OAkBA,EAlBA,cAmBA,QACA,sBACA,wBACA,wBAtBA,+BAwBA,QAxBA,iCA0BA,GA1BA,+CAgCA,iBAtTA,SAsTA,2GACA,gCACA,eACA,IACA,OACA,gCACA,UACA,IAGA,aACA,UACA,SACA,yDADA,CAIA,WACA,2DACA,gBACA,SAEA,EACA,YACA,gBACA,sBACA,oBACA,6BACA,UACA,WAGA,kBACA,eACA,UACA,KACA,OAGA,mBACA,6BACA,UACA,KACA,aAMA,QAtWA,WAuWA,SAEA,EADA,2BACA,+BAEA,4BAEA,uBAEA,WA/WA,SA+WA,GACA,oCAWA,OAVA,mBAQA,cAPA,cACA,cACA,eACA,kBACA,gBACA,gBACA,YACA,KAEA,GAEA,eA7XA,SA6XA,6IACA,GACA,uBAFA,SAIA,oBAJA,OAIA,EAJA,OAKA,qCACA,4DACA,OACA,oBARA,gD;;;;2DCpoBA,orBAAi9B,eAAG,G","file":"uni_modules/uni-file-picker/components/uni-file-picker/uni-file-picker.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./uni-file-picker.vue?vue&type=template&id=363ace0e&\"\nvar renderjs\nimport script from \"./uni-file-picker.vue?vue&type=script&lang=js&\"\nexport * from \"./uni-file-picker.vue?vue&type=script&lang=js&\"\nimport style0 from \"./uni-file-picker.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/uni-file-picker/components/uni-file-picker/uni-file-picker.vue\"\nexport default component.exports","export * from \"-!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--16-0!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./uni-file-picker.vue?vue&type=template&id=363ace0e&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./uni-file-picker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./uni-file-picker.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view class=\"uni-file-picker\">\r\n\t\t<view v-if=\"title\" class=\"uni-file-picker__header\">\r\n\t\t\t<text class=\"file-title\">{{ title }}</text>\r\n\t\t\t<text class=\"file-count\">{{ filesList.length }}/{{ limitLength }}</text>\r\n\t\t</view>\r\n\t\t<upload-image\r\n\t\t\tv-if=\"fileMediatype === 'image' && showType === 'grid'\"\r\n\t\t\t:readonly=\"readonly\"\r\n\t\t\t:image-styles=\"imageStyles\"\r\n\t\t\t:files-list=\"filesList\"\r\n\t\t\t:limit=\"limitLength\"\r\n\t\t\t:disablePreview=\"disablePreview\"\r\n\t\t\t:delIcon=\"delIcon\"\r\n\t\t\t@uploadFiles=\"uploadFiles\"\r\n\t\t\t@choose=\"choose\"\r\n\t\t\t@delFile=\"delFile\"\r\n\t\t>\r\n\t\t\t<slot>\r\n\t\t\t\t<view class=\"is-add\">\r\n\t\t\t\t\t<view class=\"icon-add\"></view>\r\n\t\t\t\t\t<view class=\"icon-add rotate\"></view>\r\n\t\t\t\t</view>\r\n\t\t\t</slot>\r\n\t\t</upload-image>\r\n\t\t<upload-file\r\n\t\t\tv-if=\"fileMediatype !== 'image' || showType !== 'grid'\"\r\n\t\t\t:readonly=\"readonly\"\r\n\t\t\t:list-styles=\"listStyles\"\r\n\t\t\t:files-list=\"filesList\"\r\n\t\t\t:showType=\"showType\"\r\n\t\t\t:delIcon=\"delIcon\"\r\n\t\t\t@uploadFiles=\"uploadFiles\"\r\n\t\t\t@choose=\"choose\"\r\n\t\t\t@delFile=\"delFile\"\r\n\t\t>\r\n\t\t\t<slot><button type=\"primary\" size=\"mini\">选择文件</button></slot>\r\n\t\t</upload-file>\r\n\t</view>\r\n</template>\r\n\r\n<script>\n\timport {chooseAndUploadFile} from './choose-and-upload-file.js'\r\n\timport uploadImage from './upload-image.vue'\n\timport uploadFile from './upload-file.vue'\n\tlet fileInput = null\r\n/**\r\n * FilePicker 文件选择上传\r\n * @description 文件选择上传组件，可以选择图片、视频等任意文件并上传到当前绑定的服务空间\r\n * @tutorial https://ext.dcloud.net.cn/plugin?id=4079\r\n * @property {Object|Array}\tvalue\t组件数据，通常用来回显 ,类型由return-type属性决定\r\n * @property {Boolean}\tdisabled=[true|false]\t组件禁用\r\n * \t@value true \t禁用\r\n * \t@value false \t取消禁用\r\n * @property {Boolean}\treadonly=[true|false]\t组件只读，不可选择，不显示进度，不显示删除按钮\r\n * \t@value true \t只读\r\n * \t@value false \t取消只读\r\n * @property {String}\treturn-type=[array|object]\t限制 value 格式，当为 object 时 ，组件只能单选，且会覆盖\r\n * \t@value array\t规定 value 属性的类型为数组\r\n * \t@value object\t规定 value 属性的类型为对象\r\n * @property {Boolean}\tdisable-preview=[true|false]\t禁用图片预览，仅 mode:grid 时生效\r\n * \t@value true \t禁用图片预览\r\n * \t@value false \t取消禁用图片预览\r\n * @property {Boolean}\tdel-icon=[true|false]\t是否显示删除按钮\r\n * \t@value true \t显示删除按钮\r\n * \t@value false \t不显示删除按钮\r\n * @property {Boolean}\tauto-upload=[true|false]\t是否自动上传，值为true则只触发@select,可自行上传\r\n * \t@value true \t自动上传\r\n * \t@value false \t取消自动上传\r\n * @property {Number|String}\tlimit\t最大选择个数 ，h5 会自动忽略多选的部分\r\n * @property {String}\ttitle\t组件标题，右侧显示上传计数\r\n * @property {String}\tmode=[list|grid]\t选择文件后的文件列表样式\r\n * \t@value list \t列表显示\r\n * \t@value grid \t宫格显示\r\n * @property {String}\tfile-mediatype=[image|video|all]\t选择文件类型\r\n * \t@value image\t只选择图片\r\n * \t@value video\t只选择视频\r\n * \t@value all\t\t选择所有文件\r\n * @property {Array}\tfile-extname\t选择文件后缀，根据 file-mediatype 属性而不同\r\n * @property {Object}\tlist-style\tmode:list 时的样式\r\n * @property {Object}\timage-styles\t选择文件后缀，根据 file-mediatype 属性而不同\r\n * @event {Function} select \t选择文件后触发\r\n * @event {Function} progress 文件上传时触发\r\n * @event {Function} success \t上传成功触发\r\n * @event {Function} fail \t\t上传失败触发\r\n * @event {Function} delete \t文件从列表移除时触发\r\n */\r\nexport default {\r\n\tname: 'uniFilePicker',\r\n\tcomponents: {\r\n\t\tuploadImage,\r\n\t\tuploadFile\r\n\t},\r\n\tprops: {\r\n\t\tvalue: {\r\n\t\t\ttype: [Array, Object],\r\n\t\t\tdefault() {\r\n\t\t\t\treturn []\r\n\t\t\t}\r\n\t\t},\r\n\t\tdisabled: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tdisablePreview: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tdelIcon: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\t// 自动上传\r\n\t\tautoUpload: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\t// 最大选择个数 ，h5只能限制单选或是多选\r\n\t\tlimit: {\r\n\t\t\ttype: [Number, String],\r\n\t\t\tdefault: 9\r\n\t\t},\r\n\t\t// 列表样式 grid | list | list-card\r\n\t\tmode: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'grid'\r\n\t\t},\r\n\t\t// inputUrl: {\r\n\t\t// \ttype: Boolean,\r\n\t\t// \tdefault: false\r\n\t\t// },\r\n\t\t// 选择文件类型  image/video/all\r\n\t\tfileMediatype: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'image'\r\n\t\t},\r\n\t\t// 文件类型筛选\r\n\t\tfileExtname: {\r\n\t\t\ttype: [Array, String],\r\n\t\t\tdefault() {\r\n\t\t\t\treturn []\r\n\t\t\t}\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\tlistStyles: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault() {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t// 是否显示边框\r\n\t\t\t\t\tborder: true,\r\n\t\t\t\t\t// 是否显示分隔线\r\n\t\t\t\t\tdividline: true,\r\n\t\t\t\t\t// 线条样式\r\n\t\t\t\t\tborderStyle: {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\timageStyles: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault() {\r\n\t\t\t\treturn {\r\n\t\t\t\t\twidth: 'auto',\r\n\t\t\t\t\theight: 'auto'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\treadonly: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\treturnType: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'array'\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tvalue: {\r\n\t\t\thandler(newVal) {\r\n\t\t\t\tlet newFils = []\r\n\t\t\t\tlet newData = [].concat(newVal || [])\r\n\t\t\t\tnewData.forEach(v => {\r\n\t\t\t\t\tconst files = this.files.find(i => i.url === v.url)\r\n\t\t\t\t\tconst reg = /cloud:\\/\\/([\\w.]+\\/?)\\S*/\r\n\t\t\t\t\tif (!v.path) {\r\n\t\t\t\t\t\tv.path = v.url\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (reg.test(v.url)) {\r\n\t\t\t\t\t\tthis.getTempFileURL(v, v.url)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewFils.push(files ? files : v)\r\n\t\t\t\t})\r\n\t\t\t\tlet data  = null\n\t\t\t\tif (this.returnType === 'object') {\n\t\t\t\t\tdata = this.backObject(newFils)[0]\n\t\t\t\t} else {\n\t\t\t\t\tdata = this.backObject(newFils)\n\t\t\t\t}\n\t\t\t\tthis.formItem && this.formItem.setValue(data)\r\n\t\t\t\tthis.files = newFils\r\n\t\t\t},\r\n\t\t\timmediate: true\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tfiles: [],\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\tfilesList() {\r\n\t\t\tlet files = []\r\n\t\t\tthis.files.forEach(v => {\r\n\t\t\t\tfiles.push(v)\r\n\t\t\t})\r\n\t\t\treturn files\r\n\t\t},\r\n\t\tshowType() {\r\n\t\t\tif (this.fileMediatype === 'image') {\r\n\t\t\t\treturn this.mode\r\n\t\t\t}\r\n\t\t\treturn 'list'\r\n\t\t},\r\n\t\tlimitLength() {\r\n\t\t\tif (this.returnType === 'object') {\r\n\t\t\t\treturn 1\r\n\t\t\t}\r\n\t\t\tif (!this.limit) {\r\n\t\t\t\treturn 1\r\n\t\t\t}\r\n\t\t\tif (this.limit >= 9) {\r\n\t\t\t\treturn 9\r\n\t\t\t}\r\n\t\t\treturn this.limit\r\n\t\t},\n\t\textname(){\n\t\t\tif (!Array.isArray(this.fileExtname)) {\n\t\t\t\tlet extname = this.fileExtname.replace(/(\\[|\\])/g,'')\n\t\t\t\treturn extname.split(',')\n\t\t\t} else {\n\t\t\t\treturn this.fileExtname\n\t\t\t}\n\t\t\treturn []\n\t\t}\r\n\t},\r\n\tcreated() {\r\n\t\t// TODO 兼容不开通服务空间的情况\r\n\t\tif(!(uniCloud.config && uniCloud.config.provider)){\r\n\t\t\tthis.noSpace = true\r\n\t\t\tuniCloud.chooseAndUploadFile = chooseAndUploadFile\r\n\t\t}\r\n\t\tthis.tempData = {}\r\n\t\tthis.form = this.getForm('uniForms')\r\n\t\tthis.formItem = this.getForm('uniFormsItem')\r\n\t\tif (this.form && this.formItem) {\r\n\t\t\tif (this.formItem.name) {\r\n\t\t\t\tthis.rename = this.formItem.name\r\n\t\t\t\tthis.form.inputChildrens.push(this)\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t/**\r\n\t\t * 获取父元素实例\r\n\t\t */\r\n\t\tgetForm(name = 'uniForms') {\r\n\t\t\tlet parent = this.$parent;\r\n\t\t\tlet parentName = parent.$options.name;\r\n\t\t\twhile (parentName !== name) {\r\n\t\t\t\tparent = parent.$parent;\r\n\t\t\t\tif (!parent) return false;\r\n\t\t\t\tparentName = parent.$options.name;\r\n\t\t\t}\r\n\t\t\treturn parent;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 继续上传\r\n\t\t */\r\n\t\tupload() {\r\n\t\t\t// TODO 先放弃这个实现 ，不能全部上传\r\n\t\t\t// if (this.$uploadFiles) {\r\n\t\t\t// \tthis.$uploadFiles()\r\n\t\t\t// } else {\r\n\t\t\t// \tuni.showToast({\r\n\t\t\t// \t\ttitle: '请先选择文件',\r\n\t\t\t// \t\ticon: 'none'\r\n\t\t\t// \t})\r\n\t\t\t// }\r\n\t\t\tlet files = []\r\n\t\t\tthis.files.forEach((v, index) => {\r\n\t\t\t\tif (v.status === 'ready' || v.status === 'error') {\r\n\t\t\t\t\tfiles.push(Object.assign({}, v))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.uploadFiles(files)\r\n\t\t},\r\n\t\t/**\r\n\t\t * 选择文件\r\n\t\t */\r\n\t\tchoose() {\r\n\t\t\t\r\n\t\t\tif (this.disabled) return\r\n\t\t\tif (this.files.length >= Number(this.limitLength) && this.showType !== 'grid' && this.returnType === 'array') {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: `您最多选择 ${this.limitLength} 个文件`,\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t})\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t// uni.showActionSheet({\r\n\t\t\t// \titemList: ['填写 url 地址', '选择文件'],\r\n\t\t\t// \tsuccess: (res) => {\r\n\t\t\t// \t\tif (res.tapIndex === 1) {\r\n\t\t\t// \t\t\tthis.chooseFiles()\r\n\t\t\t// \t\t}\r\n\t\t\t// \t},\r\n\t\t\t// \tfail: function(res) {}\r\n\t\t\t// });\r\n\t\t\tthis.chooseFiles()\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 选择文件并上传\r\n\t\t */\r\n\t\tchooseFiles() {\r\n\r\n\t\t\tuniCloud\r\n\t\t\t\t.chooseAndUploadFile({\r\n\t\t\t\t\ttype: this.fileMediatype,\r\n\t\t\t\t\tcompressed: false,\r\n\t\t\t\t\t// TODO 如果为空，video 有问题\r\n\t\t\t\t\textension: this.extname.length > 0 ? this.extname : undefined,\r\n\t\t\t\t\tcount: this.limitLength - this.files.length, //默认9\r\n\t\t\t\t\tonChooseFile: async res => {\r\n\t\t\t\t\t\tif ((Number(this.limitLength) === 1 && this.disablePreview && !this.disabled) || this.returnType === 'object') {\r\n\t\t\t\t\t\t\tthis.files = []\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet filePaths = []\r\n\t\t\t\t\t\tlet files = []\r\n\t\t\t\t\t\tif (this.extname && this.extname.length > 0) {\r\n\t\t\t\t\t\t\tres.tempFiles.forEach(v => {\r\n\t\t\t\t\t\t\t\tlet fileFullName = this.getFileExt(v.name)\r\n\t\t\t\t\t\t\t\tconst extname = fileFullName.ext.toLowerCase()\r\n\t\t\t\t\t\t\t\tif (this.extname.indexOf(extname) !== -1) {\r\n\t\t\t\t\t\t\t\t\tfiles.push(v)\r\n\t\t\t\t\t\t\t\t\tfilePaths.push(v.path)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tif (files.length !== res.tempFiles.length) {\r\n\t\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\t\ttitle: `当前选择了${res.tempFiles.length}个文件 ，${res.tempFiles.length - files.length} 个文件格式不正确`,\r\n\t\t\t\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\t\t\t\tduration: 5000\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfilePaths = res.tempFilePaths\r\n\t\t\t\t\t\t\tfiles = res.tempFiles\r\n\t\t\t\t\t\t}\r\n\n\t\t\t\t\t\tlet currentData = []\r\n\t\t\t\t\t\tfor (let i = 0; i < files.length; i++) {\r\n\t\t\t\t\t\t\tif (this.limitLength - this.files.length <= 0) break\r\n\t\t\t\t\t\t\tfiles[i].uuid = Date.now()\r\n\t\t\t\t\t\t\tlet filedata = await this.getFileData(files[i], this.fileMediatype)\r\n\t\t\t\t\t\t\tfiledata.file = files[i]\r\n\t\t\t\t\t\t\tfiledata.progress = 0\r\n\t\t\t\t\t\t\tfiledata.status = 'ready'\r\n\t\t\t\t\t\t\tthis.files.push(filedata)\r\n\t\t\t\t\t\t\tcurrentData.push(filedata)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.$emit('select', {\r\n\t\t\t\t\t\t\ttempFiles: currentData,\r\n\t\t\t\t\t\t\ttempFilePaths: filePaths\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tres.tempFiles = files\r\n\t\t\t\t\t\t// 停止自动上传\r\n\t\t\t\t\t\tif (!this.autoUpload || this.noSpace) {\r\n\t\t\t\t\t\t\tres.tempFiles = []\r\n\t\t\t\t\t\t\t// TODO 先放弃这个实现 ，不能全部上传\r\n\t\t\t\t\t\t\t// return new Promise((resolve) => {\r\n\t\t\t\t\t\t\t// \tthis.$uploadFiles = () => {\r\n\t\t\t\t\t\t\t// \t\t// this._is_uploading = true\r\n\t\t\t\t\t\t\t// \t\tresolve(res)\r\n\t\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonUploadProgress: progressEvent => {\r\n\t\t\t\t\t\tthis.setProgress(progressEvent, progressEvent.index)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(result => {\n\t\t\t\t\tthis.setSuccessAndError(result.tempFiles)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\tconsole.log('选择失败', err)\r\n\t\t\t\t})\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 批传\r\n\t\t * @param {Object} e\r\n\t\t */\r\n\t\tuploadFiles(files) {\r\n\t\t\tfiles = [].concat(files)\r\n\t\t\tthis.uploadCloudFiles(files, 5, res => {\r\n\t\t\t\tthis.setProgress(res, res.index, true)\r\n\t\t\t})\r\n\t\t\t\t.then(result => {\r\n\t\t\t\t\tthis.setSuccessAndError(result)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\tconsole.log('err', err)\r\n\t\t\t\t})\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 成功或失败\r\n\t\t */\r\n\t\tasync setSuccessAndError(res, fn) {\r\n\t\t\tlet successData = []\r\n\t\t\tlet errorData = []\r\n\t\t\tlet tempFilePath = []\r\n\t\t\tlet errorTempFilePath = []\r\n\t\t\tfor (let i = 0; i < res.length; i++) {\r\n\t\t\t\t// const index  = item.index\r\n\t\t\t\tconst item = res[i]\r\n\t\t\t\tconst index = item.uuid ? this.files.findIndex(p => p.uuid === item.uuid) : item.index\r\n\t\t\t\tif (index === -1 || !this.files) break\r\n\t\t\t\tif (item.errMsg === 'request:fail') {\r\n\t\t\t\t\tthis.files[index].url = item.path\r\n\t\t\t\t\tthis.files[index].status = 'error'\r\n\t\t\t\t\tthis.files[index].errMsg = item.errMsg\r\n\t\t\t\t\t// this.files[index].progress = -1\r\n\t\t\t\t\terrorData.push(this.files[index])\r\n\t\t\t\t\terrorTempFilePath.push(this.files[index].url)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.files[index].errMsg = ''\r\n\t\t\t\t\tthis.files[index].url = item.url\r\n\t\t\t\t\tthis.files[index].status = 'success'\r\n\t\t\t\t\tthis.files[index].progress += 1\r\n\t\t\t\t\tsuccessData.push(this.files[index])\r\n\t\t\t\t\ttempFilePath.push(this.files[index].url)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (successData.length > 0) {\r\n\t\t\t\tthis.setEmit()\r\n\t\t\t\t// 状态改变返回\r\n\t\t\t\tthis.$emit('success', {\r\n\t\t\t\t\ttempFiles: this.backObject(successData),\r\n\t\t\t\t\ttempFilePaths: tempFilePath\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tif (errorData.length > 0) {\r\n\t\t\t\tthis.$emit('fail', {\r\n\t\t\t\t\ttempFiles: this.backObject(errorData),\r\n\t\t\t\t\ttempFilePaths: errorTempFilePath\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 获取进度\r\n\t\t * @param {Object} progressEvent\r\n\t\t * @param {Object} index\r\n\t\t * @param {Object} type\r\n\t\t */\r\n\t\tsetProgress(progressEvent, index, type) {\r\n\t\t\tconst fileLenth = this.files.length\r\n\t\t\tconst percentNum = (index / fileLenth) * 100\r\n\t\t\tconst percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n\t\t\tlet idx = index\r\n\t\t\tif (!type) {\r\n\t\t\t\tidx = this.files.findIndex(p => p.uuid === progressEvent.tempFile.uuid)\r\n\t\t\t}\r\n\t\t\tif (idx === -1 || !this.files[idx]) return\r\n\t\t\t// fix by mehaotian 100 就会消失，-1 是为了让进度条消失\r\n\t\t\tthis.files[idx].progress = percentCompleted - 1\r\n\t\t\t// 上传中\r\n\t\t\tthis.$emit('progress', {\r\n\t\t\t\tindex: idx,\r\n\t\t\t\tprogress: parseInt(percentCompleted),\r\n\t\t\t\ttempFile: this.files[idx]\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 删除\r\n\t\t * @param {Object} index\r\n\t\t */\r\n\t\tdelFile(index) {\r\n\t\t\tthis.$emit('delete', {\r\n\t\t\t\ttempFile: this.files[index],\r\n\t\t\t\ttempFilePath: this.files[index].url\r\n\t\t\t})\r\n\t\t\tthis.files.splice(index, 1)\r\n\t\t\tthis.$nextTick(()=>{\n\t\t\t\tthis.setEmit()\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 获取文件名和后缀\r\n\t\t * @param {Object} name\r\n\t\t */\r\n\t\tgetFileExt(name) {\r\n\t\t\tconst last_len = name.lastIndexOf('.')\r\n\t\t\tconst len = name.length\r\n\t\t\treturn {\r\n\t\t\t\tname: name.substring(0, last_len),\r\n\t\t\t\text: name.substring(last_len + 1, len)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 获取图片信息\r\n\t\t * @param {Object} filepath\r\n\t\t */\r\n\t\tgetFileInfo(filepath) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tuni.getImageInfo({\r\n\t\t\t\t\tsrc: filepath,\r\n\t\t\t\t\tsuccess(res) {\r\n\t\t\t\t\t\tresolve(res)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail(err) {\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 获取封装数据\r\n\t\t */\r\n\t\tasync getFileData(files, type = 'image') {\r\n\t\t\t// 最终需要上传数据库的数据\r\n\t\t\tlet fileFullName = this.getFileExt(files.name)\r\n\t\t\tconst extname = fileFullName.ext.toLowerCase()\r\n\t\t\tlet filedata = {\r\n\t\t\t\tname: files.name,\r\n\t\t\t\tuuid: files.uuid,\r\n\t\t\t\textname: extname || '',\r\n\t\t\t\tcloudPath: files.cloudPath,\r\n\t\t\t\tfile:files.file,\r\n\t\t\t\tfileType: files.fileType,\r\n\t\t\t\turl: files.path || files.path,\r\n\t\t\t\tsize: files.size, //单位是字节\r\n\t\t\t\timage: {},\r\n\t\t\t\tpath: files.path,\r\n\t\t\t\tvideo: {}\r\n\t\t\t}\r\n\t\t\tif (type === 'image') {\r\n\t\t\t\tconst imageinfo = await this.getFileInfo(files.path)\r\n\t\t\t\tdelete filedata.video\r\n\t\t\t\tfiledata.image.width = imageinfo.width\r\n\t\t\t\tfiledata.image.height = imageinfo.height\r\n\t\t\t\tfiledata.image.location = imageinfo.path\r\n\t\t\t}else{\r\n\t\t\t\tdelete filedata.image\r\n\t\t\t}\r\n\t\t\treturn filedata\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 批量上传\r\n\t\t */\r\n\t\tuploadCloudFiles(files, max = 5, onUploadProgress) {\r\n\t\t\tfiles = JSON.parse(JSON.stringify(files))\r\n\t\t\tconst len = files.length\r\n\t\t\tlet count = 0\r\n\t\t\tlet self = this\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\twhile (count < max) {\r\n\t\t\t\t\tnext()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction next() {\r\n\t\t\t\t\tlet cur = count++\r\n\t\t\t\t\tif (cur >= len) {\r\n\t\t\t\t\t\t!files.find(item => !item.url && !item.errMsg) && resolve(files)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst fileItem = files[cur]\r\n\t\t\t\t\tconst index = self.files.findIndex(v => v.uuid === fileItem.uuid)\r\n\t\t\t\t\tfileItem.url = ''\r\n\t\t\t\t\tdelete fileItem.errMsg\r\n\r\n\t\t\t\t\tuniCloud\r\n\t\t\t\t\t\t.uploadFile({\r\n\t\t\t\t\t\t\tfilePath: fileItem.path,\r\n\t\t\t\t\t\t\tcloudPath: fileItem.cloudPath,\r\n\t\t\t\t\t\t\tfileType: fileItem.fileType,\r\n\t\t\t\t\t\t\tonUploadProgress: res => {\r\n\t\t\t\t\t\t\t\tres.index = index\r\n\t\t\t\t\t\t\t\tonUploadProgress && onUploadProgress(res)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\t\tfileItem.url = res.fileID\r\n\t\t\t\t\t\t\tfileItem.index = index\r\n\t\t\t\t\t\t\tif (cur < len) {\r\n\t\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(res => {\r\n\t\t\t\t\t\t\tfileItem.errMsg = res.errMsg || res.message\r\n\t\t\t\t\t\t\tfileItem.index = index\r\n\t\t\t\t\t\t\tif (cur < len) {\r\n\t\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tsetEmit() {\r\n\t\t\tlet data = []\r\n\t\t\tif (this.returnType === 'object') {\r\n\t\t\t\tdata = this.backObject(this.files)[0]\r\n\t\t\t} else {\r\n\t\t\t\tdata = this.backObject(this.files)\r\n\t\t\t}\r\n\t\t\tthis.$emit('input', data)\r\n\t\t},\r\n\t\tbackObject(files) {\r\n\t\t\tlet newFilesData = JSON.parse(JSON.stringify(files))\r\n\t\t\tnewFilesData.map(v => {\r\n\t\t\t\tdelete v.path\r\n\t\t\t\tdelete v.uuid\r\n\t\t\t\tdelete v.video\r\n\t\t\t\tdelete v.progress\r\n\t\t\t\tdelete v.errMsg\r\n\t\t\t\tdelete v.status\r\n\t\t\t\tdelete v.cloudPath\r\n\t\t\t\treturn v\r\n\t\t\t})\r\n\t\t\treturn newFilesData\r\n\t\t},\r\n\t\tasync getTempFileURL(file, fileList) {\r\n\t\t\tfileList = {\r\n\t\t\t\tfileList: [].concat(fileList)\r\n\t\t\t}\r\n\t\t\tconst urls = await uniCloud.getTempFileURL(fileList)\r\n\t\t\tfile.path = urls.fileList[0].tempFileURL || ''\r\n\t\t\tconst index = this.files.findIndex(v => v.path === file.path)\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tthis.$set(this.files, index, file)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style>\r\n.uni-file-picker {\r\n\t/* #ifndef APP-NVUE */\r\n\tbox-sizing: border-box;\r\n\toverflow: hidden;\r\n\t/* #endif */\r\n}\r\n\r\n.uni-file-picker__header {\r\n\tpadding-top: 5px;\r\n\tpadding-bottom: 10px;\r\n\t/* #ifndef APP-NVUE */\r\n\tdisplay: flex;\r\n\t/* #endif */\r\n\tjustify-content: space-between;\r\n}\r\n\r\n.file-title {\r\n\tfont-size: 14px;\r\n\tcolor: #333;\r\n}\r\n\r\n.file-count {\r\n\tfont-size: 14px;\r\n\tcolor: #999;\r\n}\r\n\r\n.is-add {\r\n\t/* #ifndef APP-NVUE */\r\n\tdisplay: flex;\r\n\t/* #endif */\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n}\r\n\r\n.icon-add {\r\n\twidth: 50px;\r\n\theight: 5px;\r\n\tbackground-color: #f1f1f1;\r\n\tborder-radius: 2px;\r\n}\r\n\r\n.rotate {\r\n\tposition: absolute;\r\n\ttransform: rotate(90deg);\r\n}\r\n</style>\n","import mod from \"-!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./uni-file-picker.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\download\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./uni-file-picker.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}